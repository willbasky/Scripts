#!/bin/bash

# set -eux -o pipefail

SCRIPT_PATHS=$(dirname $(dirname $(realpath $0)))

source $SCRIPTS_PATH/color_log.sh
source $SCRIPTS_PATH/sensitive

function isHeadsetConnected {
  bluetoothctl info "$HEADSET_MAC" | grep 'Connected' | awk '{print $2}'
}

function isControllerPowered {
  bluetoothctl show | grep 'Powered' | awk '{print $2}'
}

function isBluetooth {
  systemctl is-active bluetooth
}

function isBlocked {
  rfkill -no device,soft | awk -v dev="$BLUETOOTH" '$1 == dev {print $2}'
}

function connectHeadset {
  bluetoothctl connect "${HEADSET_MAC}" | grep -c 'Failed'
}

debug3() {
  if [[ "$1" == "debug" || "$2" == "debug" ]]; then
    local name="$3";
    clr_green "DEBUG | $name"
  fi
}

function powerOff {
    clr_reset "Powering headset off..." -n;
    OFF=$(bluetoothctl power off);
    sleep 1;
    if [[ ${OFF} == '1' ]]; then
      clr_red " failed" -n;
      clr_reset " to power off bluetooth"
    else
      clr_blue " succeeded"
    fi
}

function deactvateBluetooth {
    clr_reset "Deactivating..." -n;
    DEACTIVED=$(systemctl stop bluetooth);
    sleep 1;
    if [[ ${DEACTIVED} == '1' ]]; then
      clr_red " failed" -n;
      clr_reset " to deactvate bluetooth service"
    else
      clr_blue " succeeded"
    fi
    IS_BLUETOOTH=$(isBluetooth);
    debug "Bluetooth service is ${IS_BLUETOOTH}"
}

function blockBluetooth {
    clr_reset "Blocking..." -n;
    KILL=$(rfkill block bluetooth);
    sleep 1;
    if [[ ${KILL} == '1' ]]; then
      clr_red " failed" -n;
      clr_reset " to block bluetooth"
    else
      clr_blue " succeeded"
    fi

    IS_BLOCKED=$(isBlocked);
    debug "Bluetooth is ${IS_BLOCKED}"
}

